#!/usr/bin/env bash

# Parsing arguments from the user
### PARAMETERS DEFAULT VALUES ###
CORPORA="None"
ENR_DUR=0
TEST_DUR=0
SQUARE=""
#################################

usage ()
{
    echo 'Usage : ./generate_trials.sh --corpora A --enr_dur B --test_dur C (optional --square)'
    echo '                  where A : path to the corpora that needs to be treated.'
    echo '                        B : minimal target speaker speech duration in an enrollment.'
    echo '                        C : duration of a test segment.'
    echo '                        --square : optional flag indicating if a square subsampling should be performed.'
    echo '                                   if not provided, a natural subsampling is performed.'
    exit 1
}

while true ; do
    case "$1" in
        --corpora)
                shift ; CORPORA=$1 ; shift ;;
        --enr_dur)
        		shift ; ENR_DUR=$1 ; shift ;;
        --test_dur)
        		shift ; TEST_DUR=$1 ; shift ;;
        --square)
                shift ; SQUARE="--square" ; shift ;;
        *)
            if [[ ! $1 == "" ]]; then
                echo "Argument $1 not recognized."
                exit 1
            fi
            break;;
    esac
done

if [ $CORPORA == "None" ]; then
    usage
fi

OPT1=""
OPT2=""
if [[ ${CORPORA,,} =~ "baby" ]]; then
    OPT1="--bbt --cross-file"               # allow enrollment to be extracted from multiple files
elif [[ ${CORPORA,,} =~ "ami" ]]; then
    OPT2="-s 0 -m 1 --sep ."                # used for retrieving microphone and session information from the filename
elif [[ ${CORPORA,,} =~ "chime5" ]]; then
    OPT2="-s 0 -m 1 --sep _"
else
    echo "The parameter --corpora must contain the string baby (for BabyTrain), ami (for AMI) or chime5 (for CHiME5)."
    echo "Note that this is not case-dependent"
    exit 1
fi;

echo "Treating corpora $CORPORA"
echo "Minimal speech of the target speaker in the enrollments : $ENR_DUR seconds"
echo "Duration of a test segment : $TEST_DUR seconds"
echo "Optional parameters that have been generated by parsing the --corpora argument : $OPT1 $OPT2"

#Â Generate enrollments
echo "Generating enrollments"
python diarization_to_enrollment.py $CORPORA -d ${ENR_DUR} $OPT1

# Generate test segments
echo "Generating test segments"
python diarization_to_test_segments.py $CORPORA -d ${TEST_DUR} ${OPT1%"--cross-file"}

# Pairing
echo "Pairing enrollments and test segments"
python pairing_enrollment_test.py --enrollments $CORPORA/enrollments_${ENR_DUR}.txt \
                                    --test_segments $CORPORA/test_segments_${TEST_DUR}.txt \
                                    $OPT2 $SQUARE
